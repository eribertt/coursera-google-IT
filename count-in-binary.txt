Binary is the fundamental communication block of computers, but it's used to
represent more than just text and images. It's used in many aspects of computing
like computer networking, which you'll learn about in a later course. It's
important that you understand how computers count in binary. We've shown you
simple lookup tables that you can use like the ASCII to binary table, but as an
IT support specialist, whether you're working on networking or security, you'll
need to know how binary works. So let's get started. You'll probably need a
trusty pen and paper, a calculator, and some good old-fashioned brain power to
help you in this video. The binary system is how our computers count using ones
and zeros, but humans don't count like that. When you were a child, you may have
counted using ten fingers on your hand. That innate counting system is called
the decimal form or base-10 system. In the decimal system, there are 10 possible
numbers you can use ranging from zero to nine. When we count binary, which only
uses zero and one, we convert it to a system that we can understand, decimal.
330, 250, 2, 40, 4 million, they're all decimal numbers. We use the decimal
system to help us figure out what bits our computer can use. We can represent
any number in existence just by using bits. That's right. And we can represent
this number just using ones and zeros. So how does that work? Let's consider
these numbers: 128, 64, 32, 16, 8, 4, 2, and 1. What patterns do you see?
Hopefully, you'll see that each number is a double of the previous number going
right to left. What happens if you add them all up? You get 255. That's kind of
weird. I thought we could have 256 values for a byte. Well, we do. The zero is
counted as a value, so the maximum decimal number you can have is 255. What do
you think the number is represented here? See where the ones and the zeros are
represented. Remember, if our computer sees a one, then the value was on. If it
sees a zero, then the value is off. If you add these numbers up, you'll get a
decimal value. If you guessed 10, then you're right. Good job. If you didn't get
it, that's okay too. Take another look. The 2 and 8 are on, and if we add them
up, we get 10. Let's look at our ASCII to binary table again. The letter h in
binary is 01101000. Now, let's look at an ASCII to decimal table. The letter h
in decimal is 104. Now, let's try our conversion chart again. 64 plus 32 plus 8
equals 104. Look at that. The math checks out. Now, we're cooking. Wow! We've
gone over all the essentials of the basic building blocks of computing and
machine language. Next, you're going to learn how we build on top of this layer
of computing to perform the task you'll do day to day.