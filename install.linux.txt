Now that we've seen how Windows is installed, let's go ahead and install the
Linux operating system. Remember how I said that Linux has many different
versions of their operating system called distributions? There are countless
articles that highlights the pros and cons of the hundreds of distributions out
there. We'll go with the most popular consumer distribution, Ubuntu. I've
already loaded Ubuntu on a plain USB drive. ProTip: Since Ubuntu is open source,
you can download the free operating system install image directly from their
website and install it using whatever media you like. I've included a link to it
in the next supplemental reading. I should also call out that you can't just
copy the install file to a USB drive and expect it to work. It has to be copied
in a way that makes a USB device bootable from our BIOS. To load the image onto
your USB device and make it bootable, you can use a tool like etcher.io. You can
also check out the link to the tool in the reading right after this video. Okay.
Let me go power on. And remember, we're gonna make sure that we want to boot
from the USB device. All right. Now that its loaded, you'll see an option if you
want to try using the operating system first or just install the operating
system. We're going to do a fresh install the operating system. The Ubuntu logo
will pop up, and then we're going to have to go through a couple of loading
screens while the system is installing. All right. We're just going to go ahead
and skip through all of these and just pick the defaults for now. All right. Now
it ask us for our name, a computer name, or host name, then a username. The host
name is used to identify the computer when it needs to talk to other computers.
On our personal computer, it's common to just use our own names for our
computer's name. But in an IT organization, we want to choose a good host name
that follows a certain standardization. We'll go over that in a later lesson,
but for now, let's just use an industry standard for host name, like user name
dash location. So I'm going to go and enter in my name, Cindy. Then, for the
host name field, I'm going to type cindy-nyc. Then for the password, we're just
going to enter a password here, then we're going to confirm. All right. Then,
I'm going to hit next. And then it'll ask us to restart once it's done. Awesome.
Now that's restarted, let's go ahead and log in. Great. Now we're in the Ubuntu
desktop environment. Here you can see where applications are laid out. On the
left-hand side here, we have a dock that we can add shortcuts to. This layout
may change since Ubuntu is changing their desktop environment in the near
future. To learn more about this, you can check out the next supplemental
reading. On the top right-hand bar here, you'll see quick settings for your
computer, like network connectivity, Bluetooth connectivity, sound and volume.
There's also the time, a menu to power off, restart, sleep, and log out of your
machine. Let's click on this menu and select "System Settings." From here, you
can change your system settings, like your screensaver, resolution, hardware
settings, and more. Let's go back to our desktop and select this icon here for
files. This opens up a window so we can view our files. You can see the
different files and folders here. If I click on "Computer", I'm taken to the
main directory of my system. We're going to get to this in-depth in the later
course. So for now, I'm going to head back to my desktop. Now, let's do the
exact same thing we did with our windows machine and create a file. This time,
let's just use commands in the shell. Because we're in a GUI, we don't have a
program called Bash that we run our commands in. Instead, we open up the search
utility here and search for an application called Terminal. When you open up the
Terminal, you'll see your username, and at symbol, the host name, colon, tilde,
and then slash desktop as your command prompt. This is used to show who's
running the command. This will be more important in another course as you switch
users. The last portion of the prompt shows you where you are on the computer.
We'll learn more about this in a later lesson too. But you can see that we're
currently in our desktop. You can verify that we're using the Bash shell with a
simple command: echo dollar sign, SHELL. The echo command just prints out text
options to the display. In this case, the argument ''dollar sign SHELL'' is the
current shell, slash bin, slash bash or bash. You could even do ''echo Hello'',
and it would display Hello, which isn't as useful. Okay. Let's create a file in
our shell. I'm going to use the touch command. Touch my_super_cool_file. And
here, you can see it made a file on our desktop. There are many different
commands you can use to make a file, but the touch command in one of the simpler
ones. Right now, it might be hard to understand why you have to memorize Linux
shell commands when it's easier to use a Windows GUI. If you'd be working with
any Linux machines, it's essential that you know these commands. Learning
commands is also a stepping stone to process automation, which we'll cover in
another course. Don't worry, by the end of this program, you should be super
comfortable in the shell. Maybe you'll even run commands faster than you can in
the GUI.