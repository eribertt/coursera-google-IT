How would you respond if I asked you, "Do you know how long it'll take me to get
to the bank?" You'd probably ask, "Where are you?" "Where's the bank?" "Are you
walking, driving, biking?" But if you just guess the details of my situation to
direct me to the bank, your response would be a day late and a dollar short. It
seems like such a natural thing to ask questions and gather information to solve
a problem, but it's usually one of those most overlooked steps in
troubleshooting. Troubleshooting is the ability to diagnose and resolve a
problem. One of the most difficult skills to acquire in an IT role isn't
technical knowledge, but effective troubleshooting, whether that's helping
someone face-to-face or remotely. It's not specific to the IT world either. We
use troubleshooting skills every day. My car is broken. The light bulb went out.
I feel sick. Imagine if you went to your doctor and said, "I feel sick," and
without any other information, he gives you a prescription for allergy medicine.
Time to find a new doctor. While this might seem far-fetched, this can happen
pretty often in the IT world. We're so in the habit of fixing things that
sometimes, we try to fix something without diagnosing it first. We're going to
give you the tools you need to develop good troubleshooting habits. No matter
how big or small the problem is, the first thing to do in troubleshooting is ask
questions. There are a lot of factors that can cause a problem. You want to make
sure you gather all your data before you start to tinker with it. Over the next
several videos, we're going to demonstrate real world, in-person, and remote
troubleshooting scenarios. For the in-person scenarios, you'll meet Gail and
Marty. And yes, we have another Marty joining us, but he spells his name with a
Y, and I spell mine with an I. Confusing, I know. Please keep in mind these are
not professional actors. We want to give you the opportunity to see how these
different scenarios would play out in real world settings. Let's look at a quick
scenario of a not-so-awesome troubleshooting interaction, and an awesome one. My
computer is broken. Oh, this looks bad. I think you're going to need a new
computer. It's going to be about a 1000 bucks. My computer is broken. Oh, okay.
Can you tell me a little bit more about how it's broken? Does it turn on at all?
Has there been any damage to it lately that you know of? Well, when I hit the
power button, I hear a "ding," but nothing comes up on screen. Oh, okay. Can I
take a look? Sure. Okay. Let me just see what's going on here. You know what?
The brightness was turned down. These brightness buttons are a little bit
fiddly, and it's easy to hit them by accident. So, there you are. Great. Thank
you. You're welcome. If we didn't ask follow up questions, we wouldn't have
realized the issue was something as small as a screen being dim. So, it's
important that you're able to gather enough information to start troubleshooting
an issue, whether it's big or small. With a little digging, we're able to
understand the situation and effectively troubleshoot the issue. What's also
really important to call out from the scenario is the tech didn't make the user
feel silly for not realizing the screens brightness was down. Can you think
about a time someone made you feel silly or even dumb? It's a pretty terrible
feeling. So don't be that person that does it to someone else. Remember, IT
support is about working in the service of others. Always try to create a
positive experience for the user. We'll deep dive into customer service later
on. In the meantime, I'll see you back in the next video on isolating the
problem.